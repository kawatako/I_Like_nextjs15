// app/layout.tsx
export const runtime = "nodejs";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Header from "@/components/component/layouts/Header";
import LeftSidebar from "@/components/component/layouts/LeftSidebar";
import BottomNavbar from "@/components/component/layouts/BottomNavbar";
import { auth } from "@clerk/nextjs/server";
import { ClerkProvider } from "@clerk/nextjs";
import { jaJP } from '@clerk/localizations';
import { Toaster } from "@/components/ui/toaster";
import { getCurrentLoginUserData } from "@/lib/data/userQueries";
import { generateImageUrl } from "@/lib/utils/storage";
import { KeepAlivePing } from "@/components/KeepAlivePing";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "TopMe",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const { userId: clerkId } = await auth();
  const raw = clerkId
    ? await getCurrentLoginUserData(clerkId)
    : null;

  // ストレージパスを署名付きURLに変換
  const currentLoginUserData = raw
    ? {
        ...raw,
        image: await generateImageUrl(raw.image),
        coverImageUrl: await generateImageUrl(raw.coverImageUrl),
      }
    : null;

  return (
    <html lang="ja" className="h-full">
      <head />
      <body className={`${inter.className} flex flex-col h-full bg-gray-100 dark:bg-gray-900`}>
        <ClerkProvider
          localization={jaJP}
          publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY!}
          proxyUrl={process.env.NEXT_PUBLIC_CLERK_PROXY_URL!}
        >
          <KeepAlivePing />
          <Header currentLoginUserData={currentLoginUserData} />
          <div className="flex-1 grid grid-cols-1 md:grid-cols-[auto_1fr] lg:grid-cols-[auto_1fr_auto] w-full max-w-7xl mx-auto">
            <aside className="hidden md:block md:w-[240px] lg:w-[260px] p-4 md:p-6 sticky top-16 self-start">
              <LeftSidebar currentLoginUserData={currentLoginUserData} />
            </aside>
            <main className="flex-1 overflow-y-auto p-4 md:p-6 pb-16 md:pb-6">
              {children}
            </main>
          </div>
          <BottomNavbar currentLoginUserData={currentLoginUserData} />
          <Toaster />
        </ClerkProvider>
      </body>
    </html>
  );
}
